[
    {
        "given" : [{"key": "ey"}, {"key": "bee"}, {"key": "see"}],
        "cases" : [
            {
                "comment" : "Dot notation after union",
                "expression" : "$[0,2].key",
                "result" : ["ey","see"]

            }
        ]
    }/*,
    {
        "given" : {
             "one": {"key": "value"},
             "two": {"k": "v"},
             "three": {"some": "more", "key": "other value"}
         }
         ,
        "cases" : [
            {
                "comment" : "Dot notation after union with keys",
                "expression" : "$['one','three'].key",
                "result" : ["value","other value"]
            }
        ]
    },
    {
        "given" : {
          "firstName": "John",
          "lastName" : "doe",
          "age"      : 26,
          "address"  : {
            "streetAddress": "naist street",
            "city"         : "Nara",
            "postalCode"   : "630-0192"
          },
          "phoneNumbers": [
            {
              "type"  : "iPhone",
              "number": "0123-4567-8888"
            },
            {
              "type"  : "home",
              "number": "0123-4567-8910"
            }
          ]
        },
        "cases" : [
            {
                "comment" : "JSONPath union of multiple different paths",
                "expression" : "$[firstName,address.city]",
                "result" : ["John","Nara"]
            }
        ]
    },
    {
    "given": {
      "foo": {"bar": 1, "baz": [2, 3, 4]}
        },
    "cases": [
        {
           "expression": "$.foo[bar,baz[1]]",
           "result": [1, 3]
        },
        {
           "expression": "$.foo[bar,baz[2]]",
           "result": [1, 4]
        },
        {
           "expression": "$.foo[bar,baz[3]]",
           "result": [1]
        }
      ]
    },{
    "given": {
      "foo": {
          "bar": {"baz": [{"common": "first", "one": 1},
                          {"common": "second", "two": 2}]},
          "ignoreme": 1,
          "includeme": true
      }
    },
    "cases": [
         
         {
            "expression": "$.foo[includeme, bar.baz[*].common]",
            "result": [true, "first", "second"]
         },
         {
            "expression": "$.foo[includeme, bar.baz[*].none]",
            "result": [true]
         }
    ]
}*/
]
